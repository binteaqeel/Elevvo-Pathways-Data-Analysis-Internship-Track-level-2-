<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="Elevvo Chinkook Query db.db" readonly="0" foreign_keys="0" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="4041"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Album" custom_title="0" dock_id="1" table="4,5:mainAlbum"/><dock_state state="000000ff00000000fd00000001000000020000000000000000fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000011300ffffff000000000000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="Elevvo Pathways (Chinkook database)*">--SQL Query to Analyze Sales
SELECT
  t.Name AS TrackName,
  SUM(il.UnitPrice * il.Quantity) AS TotalRevenue
FROM InvoiceLine il
JOIN Track t ON il.TrackId = t.TrackId
GROUP BY t.TrackId
ORDER BY TotalRevenue DESC
LIMIT 10;

--Top-Selling Products (Tracks)
SELECT
  t.Name AS TrackName,
  SUM(il.Quantity * il.UnitPrice) AS TotalRevenue
FROM InvoiceLine il
JOIN Track t ON il.TrackId = t.TrackId
GROUP BY t.TrackId
ORDER BY TotalRevenue DESC
LIMIT 10;


--Revenue Per Region (Country)
SELECT
  c.Country,
  SUM(il.Quantity * il.UnitPrice) AS TotalRevenue
FROM Customer c
JOIN Invoice i ON c.CustomerId = i.CustomerId
JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId
GROUP BY c.Country
ORDER BY TotalRevenue DESC;


--Monthly Performance
SELECT
  SUBSTR(i.InvoiceDate, 1, 7) AS Month,  -- YYYY-MM
  SUM(il.Quantity * il.UnitPrice) AS MonthlyRevenue
FROM Invoice i
JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId
GROUP BY Month
ORDER BY Month;


--JOIN: Products with Their Sales
SELECT
  t.TrackId,
  t.Name AS TrackName,
  il.Quantity,
  il.UnitPrice,
  (il.Quantity * il.UnitPrice) AS LineTotal
FROM InvoiceLine il
JOIN Track t ON il.TrackId = t.TrackId;


--Rank Tracks by Total Revenue (All-Time)
SELECT
  TrackName,
  TotalRevenue,
  RANK() OVER (ORDER BY TotalRevenue DESC) AS Rank
FROM (
  SELECT
    t.Name AS TrackName,
    SUM(il.Quantity * il.UnitPrice) AS TotalRevenue
  FROM InvoiceLine il
  JOIN Track t ON il.TrackId = t.TrackId
  GROUP BY t.TrackId
);

--Find Top 1 Selling Track per Artist
SELECT *
FROM (
  SELECT
    ar.Name AS ArtistName,
    t.Name AS TrackName,
    SUM(il.Quantity * il.UnitPrice) AS TotalRevenue,
    ROW_NUMBER() OVER (PARTITION BY ar.ArtistId ORDER BY SUM(il.Quantity * il.UnitPrice) DESC) AS RowNum
  FROM InvoiceLine il
  JOIN Track t ON il.TrackId = t.TrackId
  JOIN Album a ON t.AlbumId = a.AlbumId
  JOIN Artist ar ON a.ArtistId = ar.ArtistId
  GROUP BY ar.ArtistId, t.TrackId)
WHERE RowNum = 1;


--Find Each Customer's First Purchase
SELECT *
FROM (
  SELECT
    c.CustomerId,
    c.FirstName || ' ' || c.LastName AS CustomerName,
    i.InvoiceId,
    i.InvoiceDate,
    ROW_NUMBER() OVER (PARTITION BY c.CustomerId ORDER BY i.InvoiceDate ASC) AS PurchaseOrder
  FROM Invoice i
  JOIN Customer c ON i.CustomerId = c.CustomerId
)
WHERE PurchaseOrder = 1;


--

</sql><sql name="Elevvo Pathways (Chinkook database) (1)*">--SQL Query to Analyze Sales
SELECT
  t.Name AS TrackName,
  SUM(il.UnitPrice * il.Quantity) AS TotalRevenue
FROM InvoiceLine il
JOIN Track t ON il.TrackId = t.TrackId
GROUP BY t.TrackId
ORDER BY TotalRevenue DESC
LIMIT 10;

--Top-Selling Products (Tracks)
SELECT
  t.Name AS TrackName,
  SUM(il.Quantity * il.UnitPrice) AS TotalRevenue
FROM InvoiceLine il
JOIN Track t ON il.TrackId = t.TrackId
GROUP BY t.TrackId
ORDER BY TotalRevenue DESC
LIMIT 10;


--Revenue Per Region (Country)
SELECT
  c.Country,
  SUM(il.Quantity * il.UnitPrice) AS TotalRevenue
FROM Customer c
JOIN Invoice i ON c.CustomerId = i.CustomerId
JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId
GROUP BY c.Country
ORDER BY TotalRevenue DESC;


--Monthly Performance
SELECT
  SUBSTR(i.InvoiceDate, 1, 7) AS Month,  -- YYYY-MM
  SUM(il.Quantity * il.UnitPrice) AS MonthlyRevenue
FROM Invoice i
JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId
GROUP BY Month
ORDER BY Month;


--JOIN: Products with Their Sales
SELECT
  t.TrackId,
  t.Name AS TrackName,
  il.Quantity,
  il.UnitPrice,
  (il.Quantity * il.UnitPrice) AS LineTotal
FROM InvoiceLine il
JOIN Track t ON il.TrackId = t.TrackId;


--Rank Tracks by Total Revenue (All-Time)
SELECT
  TrackName,
  TotalRevenue,
  RANK() OVER (ORDER BY TotalRevenue DESC) AS Rank
FROM (
  SELECT
    t.Name AS TrackName,
    SUM(il.Quantity * il.UnitPrice) AS TotalRevenue
  FROM InvoiceLine il
  JOIN Track t ON il.TrackId = t.TrackId
  GROUP BY t.TrackId
);

--Find Top 1 Selling Track per Artist
SELECT *
FROM (
  SELECT
    ar.Name AS ArtistName,
    t.Name AS TrackName,
    SUM(il.Quantity * il.UnitPrice) AS TotalRevenue,
    ROW_NUMBER() OVER (PARTITION BY ar.ArtistId ORDER BY SUM(il.Quantity * il.UnitPrice) DESC) AS RowNum
  FROM InvoiceLine il
  JOIN Track t ON il.TrackId = t.TrackId
  JOIN Album a ON t.AlbumId = a.AlbumId
  JOIN Artist ar ON a.ArtistId = ar.ArtistId
  GROUP BY ar.ArtistId, t.TrackId)
WHERE RowNum = 1;


--Find Each Customer's First Purchase
SELECT *
FROM (
  SELECT
    c.CustomerId,
    c.FirstName || ' ' || c.LastName AS CustomerName,
    i.InvoiceId,
    i.InvoiceDate,
    ROW_NUMBER() OVER (PARTITION BY c.CustomerId ORDER BY i.InvoiceDate ASC) AS PurchaseOrder
  FROM Invoice i
  JOIN Customer c ON i.CustomerId = c.CustomerId
)
WHERE PurchaseOrder = 1;


--

</sql><current_tab id="0"/></tab_sql></sqlb_project>
